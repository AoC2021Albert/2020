#grep : advent-19.raw  | sort -n | sed 's/^.*: /([/ ; s/ | /],[/ ; s/$/],),/ ; s/ /,/g'  > advent-19.rules
#grep -v : advent-19.raw | sed 's/^/"/ ; s/$/",/' > advent-19.strings
m=[
([8,11],),
([116,68],[131,68],),
([131,40],[116,128],),
([131,102],[116,76],),
([35,116],[96,131],),
([131,14],[116,50],),
([116,101],[131,74],),
([130,40],),
([42],),
([94,131],[16,116],),
([131,121],[116,30],),
([42,31],),
([73,116],[49,131],),
([131,94],[116,63],),
([16,131],[105,116],),
([50,131],[108,116],),
([130,130],),
([116,118],[131,133],),
([3,116],[44,131],),
([127,116],[21,131],),
([128,131],[84,116],),
([91,116],[6,131],),
([116,19],[131,123],),
([40,130],),
([131,125],[116,12],),
([63,116],[16,131],),
([79,116],[4,131],),
([40,116],[51,131],),
([131,40],),
([131,34],[116,51],),
([39,116],[7,131],),
([116,83],[131,48],),
([53,116],[9,131],),
([62,131],[69,116],),
([131,116],[131,131],),
([131,98],[116,59],),
([82,116],[10,131],),
([116,84],[131,68],),
([23,131],[41,116],),
([131,94],[116,68],),
([131,116],[116,116],),
([94,131],[133,116],),
([115,131],[22,116],),
([116,32],[131,60],),
([77,131],[28,116],),
([28,131],[85,116],),
([105,131],[105,116],),
([122,116],[57,131],),
([36,131],[24,116],),
([116,106],[131,55],),
([40,116],[84,131],),
([116,131],[131,116],),
([16,131],),
([116,51],[131,40],),
([105,116],[104,131],),
([104,116],[94,131],),
([84,131],[128,116],),
([5,116],[15,131],),
([116,68],),
([104,130],),
([102,116],[62,131],),
([63,116],),
([132,116],[16,131],),
([131,131],),
([116,71],[131,55],),
([64,131],[93,116],),
([16,116],[105,131],),
([116,68],[131,84],),
([116,131],),
([105,116],[94,131],),
([128,116],[104,131],),
([51,116],[104,131],),
([45,131],[103,116],),
([131,29],[116,2],),
([40,116],[133,131],),
([105,116],[40,131],),
([116,84],[131,40],),
([116,16],[131,84],),
([116,117],[131,7],),
([110,131],[89,116],),
([131,111],[116,87],),
([131,128],[116,133],),
([116,107],[131,109],),
([26,131],[47,116],),
([130,116],[131,131],),
([116,63],[131,51],),
([131,43],[116,90],),
([120,116],[114,131],),
([40,116],[128,131],),
([116,126],[131,66],),
([116,92],[131,124],),
([25,116],[58,131],),
([67,131],),
([131,95],[116,46],),
([116,131],[131,131],),
([116,133],[131,105],),
([131,75],[116,17],),
([131,132],[116,51],),
([131,104],[116,128],),
([116,65],[131,18],),
([131,133],[116,34],),
([131,16],[116,133],),
([116,84],),
([116,97],[131,70],),
([131,116],[130,131],),
([116,116],),
([51,131],[105,116],),
([54,116],[1,131],),
([116,105],[131,94],),
([112,116],[61,131],),
([116,37],[131,117],),
([27,116],[75,131],),
([34,116],[84,131],),
([116,129],[131,108],),
([131,84],[116,51],),
([86,116],[99,131],),
(["a"],),
([68,116],[133,131],),
([116,131],[116,116],),
([52,131],[81,116],),
([116,133],[131,94],),
([112,116],[100,131],),
([38,116],[78,131],),
([116,80],[131,72],),
([20,131],[13,116],),
([116,33],[131,113],),
([16,130],),
([131,119],[116,134],),
([130,131],[116,116],),
([116,51],[131,63],),
([131],[116],),
(["b"],),
([130,116],[116,131],),
([131,116],),
([116,88],[131,56],)
]

n=[
    "abbbaaabbbbbbabaaaabbababbaabaabbbbaababbbbbaababbbaabbabbbabbababaaabaaaabaabbbaaababab",
"babaaaaaaaaababbbabbbabb",
"aaaababbbaababaaabbbabba",
"bbbaabbabbbabaaaaabbbaab",
"abbbbbbbbabbbbbbbabababa",
"abbaababbbaabaaabbaaaaba",
"aaabbababaabbbabbbbaababbbabbaaababababa",
"aabaababbaabaaabbbaaaabbabaaabbbabbbaabb",
"bbbbabaabaaabaaaababbaaa",
"abbaaaaabbbbabbabbabbbba",
"bbabbabbaaaababbbbbbbbbb",
"babaaaaaabbabaabbabbabbb",
"aabbbbbbbbabababbbaabaab",
"abbaaabaaababbbabbabbbbb",
"bbbaababbbbabbbbbaabbbaabaaabbabbbbbaaababbbabaa",
"baabbbbaaaabbababaaabbba",
"bbabbabaaabaabaaaabaabbabaabbbababbbaaab",
"aaabaabaabaaabaaaabaaabaabaabaabbababbbbaaaabbaaaabbbbaa",
"abaabbabbaabbabbabaaabaa",
"bbbbaabaabbbabababbbabaa",
"abbbaababaaaabaabbabbbaaaaaababbaaaabbababbbaaabbbababba",
"ababbbaaaababbbaaabbaaabaababbaabbaaabbaabaaababaaaabbbbbbabbababaabaaaa",
"aaababbaaabbabbabbaaaaaa",
"babaaaabaabbbabbbaabaaaaaaabbbbabbbbabab",
"aaaaaabbaaababbaaabaaaba",
"babbababbbaabaaaaabbaaaa",
"aaababbaabbbbaabbabbaaba",
"aaaabbabaabbbbbbbaabbbbabbbaaaab",
"bbaaababbaaaababbbaababb",
"bbbbbbabaaaabbaaabaaabbbbaaabbab",
"babbabaabbabaaabbaaaabababaabaabaaabaaab",
"baabaababbbbbbbbaaaaabaabaabaaaa",
"bbaaaabbabbbabbbbabbaabbaabbbbababababab",
"abbabaaabbabbababbabbaaaaaabaabb",
"bbbabaaaabbabaababaaaaba",
"babbabbaaaaaaabbbbbbbabb",
"baabbbbbaaababaaaaaaabaa",
"bbabaabaababbbaababaabaabbbaaaabaabababbbbbaababaababbabbaaabaaa",
"aaaaabaaaabbbbbbababbaaa",
"bbabbbbabbaaabbabbabbabaaaaabaabaabaaabaaaababababbabababaabababaaaabbab",
"aaaaaabbbababbbbbaaaaaaa",
"bbaabaaabbbabaaabaaabbab",
"bbaabbabbaaaabbabaabbbbbababaabbbabaaaabbbbaabaa",
"bbabaabbbabbaaabaabbabbb",
"aaaabaaaabaaaabaabbbbaba",
"baaaabbabaabaaabbabbbabb",
"babbaaaabbbaabababbbbbaabbabbbaa",
"bbaaabaabaabbbaababbaaba",
"aaaababbbaabbbaabaaabbaa",
"abbaabbababbaaababbaaaab",
"aabaabbbaaaaaaaabababbbbabaabbba",
"abbabbaabbaaabaaaabababb",
"aaabbababbbabababbaababb",
"babaabaabaaabaabaaababaabaabbbabaababaabbbbaabaaabababaabbabbbab",
"abbaababaaabaababbbbabaababbbbaa",
"aabbbbabbabaabbaaaabaaaaaababaaabbababba",
"ababaababaabbbaabaaabaaabaaaaaab",
"babbabaaababbbababaababb",
"aaaaabbbabaaaabaabaabaaabaabaaaabbbaaaba",
"baaaabbabbaabbbbabbaabbbaabbbaaabaabaaabbbbaabbb",
"abbaabbbbbaaababbabbaaba",
"abbabaaabbabbaaabbabbbaa",
"abbaabbbbabbbbbbababbbaaabbbaaaa",
"abaaababbaaaababaabbaabb",
"baabaaabbabbabbabaaaaabbabaabbbbbbaaaaba",
"bbabaaabaaabbbaabbbabbaaabbbbbaa",
"aaaababbabbbababbaaaaaababaaaababaabbababbababbaabbabbbaaabaaaba",
"baabaabbbabbaaabbbaabbaa",
"baabbbbbaabaabaabbbbaaaa",
"bbaaaabbbbbbbaaababbababaaaaabab",
"abbbbbbbaababbbaaaaabbba",
"baaabaaababbabbabbbaabbaaabbaababbbbabbabbabbabaaabbbabb",
"bbaabbabaabaabbaaaaabaab",
"aabbbbbbabbaaabbbaaabbab",
"abbbababbabbaaaaaaaaaaaabbbbaabb",
"abbaababbaabbbbaabbababaabababbaabababab",
"bbabbbabbbaaaaababaaabbb",
"baaaaabbbbabababbbaabbba",
"baabbabbaabbababbaababba",
"ababbaabaababbbbbbaabbba",
"bbabbababbbaababaaaaabab",
"abbaaaaabbbbbabbabbbaabbabaabbba",
"bbbbabbabaaababaaaaabbababbbabba",
"abbabababbbbaababababbaaabbaaaaababaaabbbbbaaaaababbbaabbaababbb",
"babaaaaabaaabbbbbbabbbabaaaababa",
"abababbbbababbaaababaaba",
"ababbbabbaaabaabaaabababaabababaaaabbaaaabaabaaa",
"bbabaaaaaababaaabbbaabaa",
"aaaaaaaabbaabbabbabbbaba",
"aaaaabababaaaaabbabbbabb",
"abbaaaaaabbaaababaaabbab",
"baaabaaabaaababaabaabbbb",
"abbaaaaaabbaabbabaabaaaa",
"ababaababbbbbbbbbababbbbbababaab",
"babaababaaaaaabbabbbaaaa",
"ababbbababaabbabbaabbaaa",
"abaabbaabbbaababbbbabbbbabbbaabb",
"baaaaabbbbbbabaabaaaaaba",
"baabaabbabababbbbbbaabaa",
"aabaabbbaababaaabaabbabbaaaaabab",
"bbaaababbbaabaaababbbbaa",
"babaaabbbbbbbbabbabababaaaaaabbabaaaaabbbababbabbbababaabbaaabbbbabaaabaabaaabaa",
"aaaaabaababbababbbbaaaab",
"baaaababaabaabbaaaabbaab",
"aaabbbaaabbbbbbbaaaaabbb",
"abaabbabaaabbbbbbabaaaaabababbbbbbaabbaa",
"aaabaaaabbbbbbabbabaaabbbaaaaaaa",
"baababaaaabbaababbbbbbbbaaabbabaaaababbbbbaaababbaababbaabaabaababababbaabbbbaba",
"bababbaababaababbabbbbaa",
"baaababaaabaababbbabababaaabaaaaaaabbaaa",
"bbaaabaabbbbaababbbbbaaaaababbaa",
"abaabaaaabaabbababaaaaaaaaaaabaabbbaabbabbbabbbbaaaabbabbbabbaaaabbaabaaabbbbbba",
"bbabbaaaaaaabbabaabbbaab",
"bbabbaaabbabbbabaabaabbabaaaabbaabbbabbb",
"babbaaabaaaabbaaaabaaabb",
"aaaabbabbaababaabaabbaaa",
"babaaaaaaaaaaaaaababbaba",
"baabaaabbababbbbbaaaaaaa",
"baababbaabbbbbaabbabaabaabababaaabababbbbabababbbbbbbbbaaaababbb",
"bbabbaababbaabbbaabbbabb",
"baaaababbbbabbbbbaaaaabbaaaaabaabbbbbbaaabbababaaaaaaababbaaaaaa",
"bbaaabbbbbbbbaaaabaabbab",
"aaaaaabbbbabaaabbbabbaaaaaaaabab",
"abbabbaabbbaababbbaabbaa",
"abababbbaaaaaaaabaaaaaaa",
"aabaaaaabaaababaababbaabbbaabbabaabbbabb",
"abbbaaaaaaaabbbabaabbbbbbaaabaabaaaaaabbaaabbaabbbababbaabbbbabb",
"abaabbabaabbabaababbbbabbaababababbaabbbabababbbbaaabbaa",
"aabbbbbaabbabaaaaaababab",
"abbaaabbabbaabbbabaabbba",
"baaabaabaabbbaaabbbabaaabaaabaabbbbbbbabbababaaa",
"abababbbaaabbbaababaaabbbabababb",
"abbbbbabbbabbabbbbaaaaaa",
"bbaabbabaabaabbabaabbbbbbaaaaaabaababaab",
"aabbbbaabbaaababbaaaabbb",
"baabaaabbaaabaabbabbaaba",
"aabbbaaaabbaaabbabaaaaab",
"aaabaaaaababbbaabaaaaaab",
"abbaabbaabbabbbaaababbab",
"aaaaabaabaabbbabbaabbaaa",
"bbababaabaaabaaabbbbabbb",
"aabbbaaabbaaaaabbaaababa",
"bbabaaabbaabbaaabbabababbaabbbabbbbbabbabaaabbaa",
"abbaababbabbaabbaabbabbb",
"ababbbbbaaaaabaabbaabbaa",
"aabababbbbbababbbbababba",
"babaaaababbbababaababbbbbbbbaabaaaaaabaabababaab",
"aaabbabaababbbabbbaabaab",
"abbaabbaababaabbaabbbbbaabbaabababbbabbbbaaaaabbabbbaaabaaabbaab",
"bbbbabbaabbabbaaabbbabba",
"bbbbbbbbbbbabbbbbababbab",
"aaabbaabbbaababbbaabbaabaabbbaabbaabbbabbabaaaabaaababbaabbbbbba",
"bbabbaabbabbbbabbbbabbbbbbaaaaabbbaaabba",
"bbbababaababbaabbaaaaaab",
"aabbababbbaaabbbaababbaa",
"abababaaababaabaaaaabaaabaabbbbbbabbabab",
"ababaababbabbaababbbaabb",
"aaabbbaaaabbbaaaabaabaab",
"aabbababaaaabbaabbbbabbaaaabbabbabbbabbabaaabababaababbaabaababaabbabaababaabbbb",
"babaaaaabbabaaabaabaaabb",
"bbabbaababbabaaabbabaabbbbaaabbbaaaaaaab",
"bbbaabbbbababbaabbbaabbaabbaabbb",
"bbabababaaabaaaaaabbbbbaabaaabababbabbaaaaaababaabaabaab",
"bababbaaabbbababababbabb",
"baabaaabbaabaabbaabababb",
"abbbaababaabaabaabbbaaab",
"aaaaaaaaaaaaaabbababbbba",
"baabbababbbaaaaabbbbaabababbbbaa",
"ababbbbbababbaabbbaaabba",
"bababbbbaabbbbbbbbbaaabb",
"baaaaaaaaaaabbbaabababaaabbaaaababbbbbbbabaabbbaaaababaabbbabaabbbabbbbbabbbababbbaabaaa",
"bbaabbabbaabbbaabbbbaabb",
"abbbbaababababbbbabababb",
"bbbabaaabbaaaabbababbbbbababbbba",
"baaaababbbbabaaaabaaaabb",
"abbaaabbaabbaababbbbbbba",
"baaaaabbbaabaabababbababababababaaababaababbbbbaabababba",
"aabbbbaaabbbbbbbabbabaaabbbaaabb",
"abaabbaaaaaabbaabaabbbbbbbbaabbaaaabbababbbaabaabbbbaabbbaaaabaa",
"ababbbabbbbbabbabbbbbabb",
"bbabbbabaabbbbbaaabbbbabbbabbbbb",
"baabbbbbabbabaaaaaaabaab",
"baaaabbabbaaaaabbaabaabaabaaabbb",
"baaaaabbabbbababbababbab",
"abbaabbaaababbbabbbabaab",
"aaabaaaaababaababbbabbbbbbbbaababbaaabbbbabbbaaabaababba",
"babbaabbbbabaaababaaaabb",
"bbbaabbaabbbbbabbbaababa",
"bbaabbabbbbbabbabababaaa",
"aabbabbabaaabaaaabbbbbba",
"aabaabbaabbaabbbabaabbbb",
"bbabbaaaabbbababbbbabbabaaabaaaaaababababaababba",
"ababbbbbaababbbbbaaaabbaaaabaaab",
"abbbbbbbbbabaaabbbbabaaaaaabbbbbabaaaabaabbabbab",
"bbaabaaaabbbaabaaaaabbaaababbbaaabaaabbabbbbaaab",
"aababbbbaababbbbaaababbbbaaabaabaabbbbabbbabaaabbbbabaabbbbaabaabaababbaaaabbbabbbbbbbba",
"aaaabaaaaaabbabbbabbbaabbbaabaab",
"abbbaaabbbaaaaaaabaababa",
"babbbababaabbbbababbbbbabbabbaabbaabbbabaaabbaaaaababbaaabbbbbaaabababbaabbababa",
"bbaaabababbaaababbbbbabb",
"aabaabbbbbabbabababaabaa",
"bbbaabbbbbaaaabaaaaaaaba",
"bbabbabbaababaaabaaabbaa",
"bbaaaaabbabbbbbbabbbbbbbababaaaa",
"bbbbbbabbabbabbabababbab",
"ababbbabbaababaababbbbba",
"babaaaabbabbaabbababbabb",
"abaaabbaababaaaaabaaabbb",
"aaaababbbaabaabbbbabbabbbaaabbab",
"baaabbbbbbbaaaaaaaababbaaaaabbbb",
"baaabaabbbabbabbbababaab",
"aabbabaaaababbbbaabbbaab",
"bbbbbbbbbbbabbabbbaaaaba",
"aabbbbbbaabbbbbabbaababb",
"bbbabaaaabaabbabaabbaaab",
"bbbabbbbbbbaabbbabaabaaa",
"baabbbabbbbbbbaababbaaba",
"abbaaaaabbbaabbbabbbbbbbabaabbbb",
"bbaabbbbbaaabbbbbbababaababababaabaabbbb",
"abababbbbbabbbbabbbaabbbaabbbbbbbbabaaababababbaabbbbbababaaabba",
"abbbbbabaabbabaaabaaaaab",
"bbababaababbaaababbbbbaababbabbaabbbbaabaabaababababbaaa",
"abbbbbaaabababbbbabaaaabbbaabbbababababa",
"babbabbaaabbabaaaaaaaaba",
"aabaaaaaabbabbaaaaabbbba",
"bbbbbbaaabbaababbababaab",
"aaababbbbbaaabaabababaabaabbbabbaaaabbba",
"babbbabbaaabbaabbaaabbbaabbaaaabbbbaaaab",
"babbbbbbbaaaabaaaabbabbbaaaabbbaaabbaaaaaaabbbbbaabbababbaaaaaaaaaabbbbbababbbaabbaaaaaa",
"baaaaabbbabbbbbbaababbbbbaaabbbabaabbaab",
"aabbbbbbabbbbbabaabababa",
"baabaabbbbbaaaaababbbaba",
"aaabaabaaabaababbaabaabababbbaaa",
"abbabbbabbbbbbaaaababaab",
"abbaaabbbabbabbababbbbabbababaaaaababbaa",
"abaaabbabbbabbbbabbaabbbbbbabbabbaabbbbbaaaaaaab",
"bbbbbbbbabbbbaaabbaaaaaa",
"aababbbaaababbbbbbabbbbb",
"baaababaaabaabaabbabbbaa",
"bbabbaaababaabbaaaabbbba",
"babbabbababbaaaabbbabaaabbbaababababbbababbaaaab",
"baabbbababbbbaabbaabbaab",
"aaababbabbababaababaabbb",
"aaaaaaababbbaaaababaabbbabbaaaabaabababbabbaaabbaabaaabb",
"baaababaaabbabababaabbbb",
"bbbbbbaabaabbabbababbbabbbababba",
"aabaaaaababbabaabbabaaba",
"babaaabaabbaaabbabaabbabbabbbaaa",
"abbabbbbbbbbbaabbbababaaababaabaabbbaaabbaaabababbaaaaaaabbbabaaaaababab",
"abaaababbbaaababbaabaaabaabaabbbbbaabbab",
"bbbabaaabbabaaaaaaabaaab",
"baabaaaaaabbbababababbbabababbab",
"bbbbbaaaaaaabbbbbaababaababababaabaabaaabbaaaabbbabababbaaabbaaaaaaaaaba",
"abababbbbabbabaaaabbbabb",
"bbbbbabaaababbaaaaaabbbaaaaabaabbaaababbbabababbbabaaaaabaaaaabababaaaaaababababbbaaabba",
"ababababaabbbaabbabbaaabbaabaabaababaaabbabbbbbabbabaabbbbbaaaaaaaaabbbbbbbaaabb",
"baababaaaabaababbbbaabaaaabbbabbabbbbbbaabbaaaab",
"bbaaabbbbbabbababbbbbbba",
"abbaaabbbbbaabbababbaaabbbbbbbbaababbaba",
"abbbabababbbababbabbaabbbaabbababaaaabaaaaaaaabaabaaaaaa",
"bbbaabbabbbbbbabbbaababb",
"babbababbbababaabaabbbabbabaabaaaababbaa",
"baaabaaaababaabababaabbb",
"bbabaaabbabaabaabbbbbaababababaabbabaabaaaaabaaa",
"baabbbabaaaabbaababbaabbabbbabaaabaabaaa",
"babaaaaababaaaaabbabaabbabaabbba",
"abaaababbaabaaabbbabababaabbabbbabaabbba",
"bbbbabbaabbbbbaaababaabb",
"baaaaabaaabbbabaaaaaabbabaaabababaaabaababbabbabbbabbaabbbbbaabbababbaba",
"abaabbababbabaaaabaaabbb",
"aabaabbabbabbaaaaabaabbbbbbaaaaa",
"baabbabbaabbbbbaaaaaabaabaabbbbaaabbaababaaaaabbabbbabbabbbabbaa",
"aabaabbbaababbbaababbbabaabaaaba",
"aaaaabaaaabbbbbbaaabaaab",
"aabbbbbaaaaaabaaabbbbbba",
"abbaaaaababbaabbaababbab",
"abaaababaaabaaaabababbaababbaaaa",
"baabbbbbaaaabbabbbaabbba",
"bbbaabbaaaaabaabbbbbaaaaabbbababbabaaaabababbaaaaaaaabab",
"abbbaabaababbaabbaaaabbaabbaaabbaaaabaab",
"abbbbaabaababaaaabaaabaa",
"baabaabbabbbbbbbbbaabaab",
"ababaabbbbabaaaaaaababbaaaabbbabbababbba",
"bbbaabababbaabababaaabbaaaaabbaaaaaababbbbbbaabbbbbabaab",
"aababbbabbbbabaabbaaabba",
"aabbababaabaabbaaaaabbbb",
"bbaababbabaaaabaabababbaabbaaabaaaaaababaaabaaabbabababbabaababb",
"baabbbaaaaabbbbbaaabaaab",
"aaabbabaaabaaaaababbabbabababaabaababbaa",
"abbbbbbbbbbbaabaaaabaabb",
"babbaaabbbababbbaaabbbbabbababbbbbbaaaababababbaabbaababbaaaabbabbbaabaa",
"abbbaaababaaabaababbbabbbabaaaaaabbaabbbaaaabbabbaabbbbbaabaabbbbbbbaabbaabaaababbaabbbb",
"baaabaaaaabbbbaabbbaabbaaaabbabb",
"aaabbbbbbbbbabaabaaabbba",
"abbaaabaaababbbaabbbabaa",
"ababaabbbabbabbabaaaaaab",
"ababbaaabbbbbbbbaabaabbabaaaabbbaabaabbabaaaaabbaaabbbbbabbaabaababaabba",
"aababbbabbaabbababaaaabb",
"abbabaaaaaaaabaabbbbaaaa",
"babaaaabbaaaabbaaabbbaba",
"ababbbbbbbaabaaaabababbbaaabaaab",
"babaaaabbaabbbabbbabbbbb",
"babaabbaaabbbbaabbaaabbbbabaaaaabbaaaaaa",
"abaabbbbaaabaaabbbbaaabaabaabaab",
"babbbbbbabbabaaabababaab",
"bbabbabbaaaababbbaaabbaa",
"abbabbbababaabbababbabbabbabbbaa",
"bbbabbbbabaaabbabbbaaaba",
"baaaababaaaaabbabbaabbbb",
"bbbbbbbbbabbbbbbabbababb",
"bbabbbabaabbababaabbaababaabbabaabaabbaaababaaabababaaabaabbbaba",
"aababaaabbabaaabaabbbbbbbbaaaaaa",
"ababbbaaabbbababaabbaabb",
"abbaabbaabaabbaaababbaaa",
"aabbbabaabbaabbaabbbbabbbabbbabbabbaabbbbbbaabaa",
"bbaabbabababaaaaabbbbaba",
"bbabbababbaaaaabbbbaaaab",
"aabbbbaabbaabbabbbaaaaaa",
"baaabaabbbbababaabaaaaaa",
"bababbaaaaabaaaababaabababbabaabbabbababbabbbabbbbbaaaabbababbba",
"bbaaaabbaabbabbaabababab",
"baababaabaaabaaaabbababb",
"baabbbabaababaaaabbbbbabbbbabbabaaaaaaaaabbbbbba",
"abbbbaaaaabaaaaaabababba",
"abbaabaaaaabbabababbaabaaaabaaabbaaaaabbabaabbaabaaaabbbabbbabbbaaabaabb",
"baaaababbbbbabaabbaaabba",
"aabababbaaabbababaaaaaabaaabbaaa",
"babaaaabbbbaabbbbbbbabaababaaaaabbbaabbbaaabbbbbaabbaaaa",
"bbbababaaaaaabaabaaaaaba",
"babaaaaabaabbbababbabaababababaabbaaabba",
"ababbaabbaabbbbbaabbaaba",
"ababaababbbaabbbabbbaaaa",
"bbabbababaabaabaaaabaabb",
"abbbababbababbaaaabababa",
"bbaaaabbbaaaabbabaabbbbabbaaaabbabbbbbbbabaabbbabbbabaabbabbaaba",
"babbabaabaaaabaabbbaaabbaabaaabbbaaaaabbbababaaabbaababbbabbbaab",
"baabbabbbaabbbbbbbbaabaa",
"babbababbaaaaabbbabbbaab",
"aabaabaaabbbbaaaaabaaaaabbaabababababaaa",
"abbbbbabbaabbbbbbbbaaabb",
"bababbbbbbaaababaaababaabaabbaaa",
"abbabaaaabbaabbbbaabababbbbbbbabbbabbbbabbbaaaba",
"bababbaaabbaababbbaaaaba",
"aaabababbbbaaabbbaabbabaaababbbaabbbaababaaababbababababbabbabaa",
"aabaabbbbabbbbabbabbbaba",
"abbbbbabaabbabbaaaaaabba",
"bbbabbababababaabbaaabbabbbaaabbbabbbaba",
"baaabaaabaabbbbaaaabbbab",
"abbaaaaaaaabbbaabaaaaabbabbbbbaaabababababaabbbb",
"aaabbabbababbbbaaabbabaaabababbababbbaaaaabbbbbababbaaabbbaabaab",
"babbbbabbaabaaabbbaaaaababbbbaabaabbaaab",
"bbabbabbabaabbbaaaaaabbaabaabaabbabbaabaaabbabbb",
"aaababbaabbaaabaababbbaabaabbabbaabbaabb",
"abbbabaaaabbaaabbabbbbababaabbaaaabaaabbaabbbaabbbabbabb",
"aaabbababaabbabaaabbbaaaabbabaaabbaaababbaaabbabaaabbbab",
"ababbbabbbbabbabbaabbbababbabaaaabaabbbbaababaab",
"abbabaababbbbaabaaaabbaaaababbbababababbbaaaabbb",
"aaabbbaabaaabaaabaabbabaabaaaababbbbaabb",
"abbabbaabaaabaaaabaaaaab",
"aababbabaaabbabbabaabaaababbbbbabaabbbababbbbbabaabbbbbbaaabbaaa",
"bbbbbbaaabababbabbbbbabb",
"baabababbabbbbabbbabaaaabbabaaaabbbbaabbbaabbbbabaabbbbbbaaababbabbbbaababaaabba",
"babbabaaaabaabbaaabaaaab",
"baaabaaaaabbaababbaababb",
"aaaaaabbbbbbbbbbaababbab",
"abbaaabaabaabbabbbaabbbbbbbababaababbaaa",
"aaabaaaaabbbbaababbaabaa",
"babbaaabbabbababbaaabbab",
"aabaabbabbabbabbabbaaababbbbbaaabaabbbababaaaaaabbaababb",
"bbabbbabaabbbbabaabbabbabababbab",
"ababaaaaaabaababbaababba",
"baaaababaaaaaabbaaaaaabbababbabb",
"aabaaaaabbbaaaaababbbaab",
"aabbaababbabbabbbbabaaba",
"aaabaaaabbbbabbaaabbaabb",
"abbaabbaaaaabbabaaaabbabbabaabaababbbbba",
"baaaabbaaabbbaaabbbabbaaabaabaab",
"abbabaabababbbbbbbaababb",
"baaabaaabbbaabbababaabaa",
"babbaabaabaaabbbbbbabbaaaaaaaaabababbaaaaaaaabaabbbaaabbabaabaabbbaaaaba",
"abbbbbaabababbaaaabaabbaabbaabbabbbaabbabbabbbbb",
"bbbbabaaaabbbaaaaabbaaaa",
"aaabaaaaabababbbbaaabbba",
"aabbbbabbaaaababbaaaaaba",
"babaaaabbaaaaabbabbababa",
"aaaabaabbaabbbbabbbbabaababbaaabaababaabbaabbbbaaaaaaaaa",
"abbbbbabaabbabaaaaababaa",
"ababaaababaaaabaaabbbaabbaaababb",
"aaabaaaabaabbabaaababaaabbbbabaaaabbbaab",
"babaaabaaaababbabbabaaabbbaabbabbbabaabaaaaaaaba",
"bbaabbbbbbabbbbbabbbabbabbaaaabbbaaabaaababbbbaaababaaabbaaaabbaaaabaabb",
"aabbaabaaaabaabaaabaaaba",
"babaaabbbbaaaaabaaaabaaa",
"baabaabbbaaaababbabaaaaaaaabaabb",
"abbababaabbaaaababbbaaabbbaabbbabbbbaaababbabbabbbabaaaabbabababaaabbbabaaaaabab",
"bbbabbbbbabaaabbabbbbbbbaabbababbbaaabba",
"bbbababababaababaaaabaaa",
"bbbbabaabbbbaababbababbb",
"ababaabbbbaaaabbbbababbb",
"abaaababaaaaaaababbbbbbbbbbbaaaaabbbaaabaababaabaaabbbab",
"babaaabbaabbaabaaabbbaab",
"baabaabaaababbbbbabbbbbbabbabbab",
"baabbbabbbaabbbbbabbbbaa",
"ababbaabbabaabababbbbbaabbaaababaaaaaaaabbabbbbbaaabaaaabbbabbbaaabbbaab",
"baababaaabbbbbaabbbaabbaababaaaabbaaaabbbbbbaaabaabaaaba",
"bbabbaabbbaabbabbbbbbbba",
"baabaabaabababbbaabaababbbbbbbbbaaaaababbbaaaaba",
"babbaabbbabbbbbbbabbabbb",
"abbbbbabbbabaabbbaaabbab",
"aabbabaaaaababbaaaabaabb",
"baaaabbaaababbbabaaababbbaabaabaaaabbabbbabbabab",
"babaabbabaababaaaabbbaba",
"abbbaabbbabbaaaaaabbabbbabbababaaaaaabaaaababaabababbbbbabbaaaaaaabbbaabbaaababbbaababaa",
"baabbbaabaaaaabbabbababa",
"aaaababbbbbbbaaaaabbbabb",
"bbbababaaaababbbbbbaaaab",
"aabbabbaabbbaabbbbbaaabbbababbbbbbbbabbaababbabbbbabbbbbabbababa",
"bbaaaaabaababbbabaaaaaaa",
"abaabbabbbaaaabbaaaaabab",
"ababbaabbaabbbabaaaabbbb",
"baaaaabbaaaabbaaabbbbbaaaababaaabbabaaabbabaabbbbbbabbbabbaabaabbaababbaaabaaaba",
"ababbaabbbabaaabbbbabbaaabaaabababbaababbaabaaaa",
"bbaaaabbbaabbabbaaabbaaa",
"babaaabaaabaabbbbaaaaaba",
"bbbbbbbbaabaabbbbaabaaabaabaaaab",
"bbbbaabaaabbabbaabaaabaa",
"aaaaaababbbbaaabbbbbabbaababababbbbabababaabaabbababbaaaaaaaaaab",
"bbabbabaaaaaaabbbabbbbabbabababaaabaaaab",
"bbabaabbaabaabbaabbbbabb",
"aaabbbbbabbaaaaabbbaabbabaaaababbbbbabaabbbaabaa",
"bababbaabbbbbbbbabbbaababbabaaba",
"aabaabbbbbbabaaaabbaabbaabbaaaaaaabbababbabababaabbbbabaaabaaaabbbaababb",
"bbabbaabbbaaabababbbbaba"
]

def combine(half1, half2):
    ret = []
    for h1 in half1:
        for h2 in half2:
            ret.append(h1+h2)
    return(ret)

def analyze(pos):
    ret = []
    first = m[pos][0]
    if len(first) == 1:
        if first[0] == 'a':
            ret = ['a']
        elif first[0] == 'b':
            ret = ['b']
        else:
            ret = analyze(first[0])
    else:
        first0 = analyze(first[0])
        first1 = analyze(first[1])
        ret =  combine(first0, first1)
    if len(m[pos]) == 2:
        second = m[pos][1]
        if len(second) == 1:
            ret += analyze(second[0])
        else:
            second0 = analyze(second[0])
            second1 = analyze(second[1])
            sr = combine(second0, second1)
            ret += combine(second0, second1)
    return(ret)

possibilities = analyze(131)
#print(possibilities)
ret=0
for s in n:
    if s in possibilities:
        ret+=1

print(ret)

#b
#0: 8 11
#8: 42 | 42 8
#11: 42 31 | 42 11 31
# as 8 and 11 are only called from 0, I can verify just both parts independently.
# Both 42 and 31 produce strings of length 8. So valid entries will be 42 42 42 42 42 42 31 31 where the amount of 42 has to be at 
# least 1 more than 31s (and at most infinite)

posshead = analyze(42)
posstail = analyze(31)

for tail in posstail:
    assert tail not in posshead

# now we know we have no collisions.
ret=0
for s in n:
    if len(s) % 8 == 0:
        parts = [s[i:i+8] for i in range(0,len(s),8)]
        i = 0
        heads = 0
        tails = 0
        while i < len(parts) and parts[i] in posshead:
            heads += 1
            i += 1
        while i < len(parts) and parts[i] in posstail:
            tails  += 1
            i += 1
        if i == len(parts) and heads > tails and tails > 0:
            print(s, f"heads {heads} tails {tails}")
            ret += 1
        else:
            print(s, "right len, wrong sort")
    else:
        print(s, "wrong len")
print(ret)
